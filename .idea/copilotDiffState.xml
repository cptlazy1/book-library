<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/main.py">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/main.py" />
              <option name="originalContent" value="from flask import Flask, render_template, request, redirect, url_for&#10;from flask_sqlalchemy import SQLAlchemy&#10;from sqlalchemy.orm import DeclarativeBase, Mapped, mapped_column&#10;from sqlalchemy import Integer, String&#10;from werkzeug.exceptions import NotFound, BadRequest&#10;&#10;app = Flask(__name__)&#10;app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///books-collection.db'&#10;&#10;&#10;class Base(DeclarativeBase):&#10;    pass&#10;&#10;&#10;db = SQLAlchemy(model_class=Base)&#10;db.init_app(app)&#10;&#10;&#10;class Book(db.Model):&#10;    id: Mapped[int] = mapped_column(Integer, primary_key=True)&#10;    book_name: Mapped[str] = mapped_column(String(250))&#10;    book_author: Mapped[str] = mapped_column(String(250))&#10;    book_rating: Mapped[int] = mapped_column(Integer)&#10;&#10;&#10;with app.app_context():&#10;    db.create_all()&#10;&#10;&#10;@app.route('/')&#10;def home():&#10;    all_books = Book.query.all()&#10;    return render_template('index.html', all_books=all_books)&#10;&#10;&#10;@app.route(&quot;/add&quot;, methods=[&quot;GET&quot;, &quot;POST&quot;])&#10;def add():&#10;    if request.method == &quot;POST&quot;:&#10;        new_book = Book(&#10;            book_name=request.form[&quot;book_name&quot;],&#10;            book_author=request.form[&quot;book_author&quot;],&#10;            book_rating=int(request.form[&quot;book_rating&quot;])  # ensure integer&#10;        )&#10;        db.session.add(new_book)&#10;        db.session.commit()&#10;&#10;        return redirect(url_for('home'))&#10;&#10;    return render_template(&quot;add.html&quot;)&#10;&#10;&#10;@app.route(&quot;/edit-rating&quot;, methods=[&quot;GET&quot;])&#10;def edit_redirect():&#10;    # Support legacy query-string links: /edit-rating?book_id=1&#10;    book_id = request.args.get(&quot;book_id&quot;, type=int)&#10;    if not book_id:&#10;        raise NotFound()&#10;    return redirect(url_for('edit', book_id=book_id))&#10;&#10;&#10;@app.route(&quot;/edit-rating/&lt;int:book_id&gt;&quot;, methods=[&quot;GET&quot;, &quot;POST&quot;])&#10;def edit(book_id):&#10;    if request.method == &quot;POST&quot;:&#10;        book_to_update = Book.query.get(book_id)&#10;        if not book_to_update:&#10;            raise NotFound()&#10;        # ensure integer input; simple guard&#10;        try:&#10;            book_to_update.book_rating = int(request.form[&quot;book_rating&quot;])&#10;        except (KeyError, ValueError, TypeError):&#10;            raise BadRequest()&#10;        db.session.commit()&#10;        return redirect(url_for('home'))&#10;    else:&#10;        book = Book.query.get(book_id)&#10;        if not book:&#10;            raise NotFound()&#10;        return render_template(&quot;edit_rating.html&quot;, book=book)&#10;&#10;&#10;if __name__ == &quot;__main__&quot;:&#10;    app.run(debug=True)&#10;" />
              <option name="updatedContent" value="from flask import Flask, render_template, request, redirect, url_for&#10;from flask_sqlalchemy import SQLAlchemy&#10;from sqlalchemy.orm import DeclarativeBase, Mapped, mapped_column&#10;from sqlalchemy import Integer, String&#10;from werkzeug.exceptions import NotFound, BadRequest&#10;&#10;app = Flask(__name__)&#10;app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///books-collection.db'&#10;&#10;&#10;class Base(DeclarativeBase):&#10;    pass&#10;&#10;&#10;db = SQLAlchemy(model_class=Base)&#10;db.init_app(app)&#10;&#10;&#10;class Book(db.Model):&#10;    id: Mapped[int] = mapped_column(Integer, primary_key=True)&#10;    book_name: Mapped[str] = mapped_column(String(250))&#10;    book_author: Mapped[str] = mapped_column(String(250))&#10;    book_rating: Mapped[int] = mapped_column(Integer)&#10;&#10;&#10;with app.app_context():&#10;    db.create_all()&#10;&#10;&#10;@app.route('/')&#10;def home():&#10;    all_books = Book.query.all()&#10;    return render_template('index.html', all_books=all_books)&#10;&#10;&#10;@app.route(&quot;/add&quot;, methods=[&quot;GET&quot;, &quot;POST&quot;])&#10;def add():&#10;    if request.method == &quot;POST&quot;:&#10;        new_book = Book(&#10;            book_name=request.form[&quot;book_name&quot;],&#10;            book_author=request.form[&quot;book_author&quot;],&#10;            book_rating=int(request.form[&quot;book_rating&quot;])  # ensure integer&#10;        )&#10;        db.session.add(new_book)&#10;        db.session.commit()&#10;&#10;        return redirect(url_for('home'))&#10;&#10;    return render_template(&quot;add.html&quot;)&#10;&#10;&#10;@app.route(&quot;/edit-rating&quot;, methods=[&quot;GET&quot;])&#10;def edit_redirect():&#10;    # Support legacy query-string links: /edit-rating?book_id=1&#10;    book_id = request.args.get(&quot;book_id&quot;, type=int)&#10;    if not book_id:&#10;        raise NotFound()&#10;    return redirect(url_for('edit', book_id=book_id))&#10;&#10;&#10;@app.route(&quot;/edit-rating/&lt;int:book_id&gt;&quot;, methods=[&quot;GET&quot;, &quot;POST&quot;])&#10;def edit(book_id):&#10;    if request.method == &quot;POST&quot;:&#10;        book_to_update = Book.query.get(book_id)&#10;        if not book_to_update:&#10;            raise NotFound()&#10;        # ensure integer input; simple guard&#10;        try:&#10;            book_to_update.book_rating = int(request.form[&quot;book_rating&quot;])&#10;        except (KeyError, ValueError, TypeError):&#10;            raise BadRequest()&#10;        db.session.commit()&#10;        return redirect(url_for('home'))&#10;    else:&#10;        book = Book.query.get(book_id)&#10;        if not book:&#10;            raise NotFound()&#10;        return render_template(&quot;edit_rating.html&quot;, book=book)&#10;&#10;&#10;if __name__ == &quot;__main__&quot;:&#10;    app.run(debug=True)" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/templates/add.html">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/templates/add.html" />
              <option name="originalContent" value="&lt;!DOCTYPE html&gt;&#10;&lt;html lang=&quot;en&quot;&gt;&#10;  &lt;head&gt;&#10;    &lt;meta charset=&quot;UTF-8&quot; /&gt;&#10;    &lt;title&gt;Add Book&lt;/title&gt;&#10;  &lt;/head&gt;&#10;  &lt;body&gt;&#10;    &lt;form action=&quot;{{ url_for('add')}}&quot; method=&quot;POST&quot;&gt;&#10;      &lt;label&gt;Book Name&lt;/label&gt;&#10;        &lt;label&gt;&#10;            &lt;!--Ensure that add.html form contains an input field&#10;            with the ** name attribute ** set to book_name, like this:--&gt;&#10;            &lt;input name=&quot;book_name&quot; type=&quot;text&quot; /&gt;&#10;        &lt;/label&gt;&#10;        &lt;label&gt;Book Author&lt;/label&gt;&#10;        &lt;label&gt;&#10;            &lt;input name=&quot;book_author&quot; type=&quot;text&quot; /&gt;&#10;        &lt;/label&gt;&#10;        &lt;label&gt;Rating&lt;/label&gt;&#10;        &lt;label&gt;&#10;            &lt;input name=&quot;book_rating&quot; type=&quot;number&quot; /&gt;&#10;        &lt;/label&gt;&#10;        &lt;button type=&quot;submit&quot;&gt;Add Book&lt;/button&gt;&#10;    &lt;/form&gt;&#10;  &lt;/body&gt;&#10;&lt;/html&gt;&#10;" />
              <option name="updatedContent" value="&lt;!DOCTYPE html&gt;&#10;&lt;html lang=&quot;en&quot;&gt;&#10;  &lt;head&gt;&#10;    &lt;meta charset=&quot;UTF-8&quot; /&gt;&#10;    &lt;title&gt;Add Book&lt;/title&gt;&#10;  &lt;/head&gt;&#10;  &lt;body&gt;&#10;    &lt;form action=&quot;{{ url_for('add')}}&quot; method=&quot;POST&quot;&gt;&#10;      &lt;label&gt;Book Name&lt;/label&gt;&#10;        &lt;label&gt;&#10;            &lt;!--Ensure that add.html form contains an input field&#10;            with the ** name attribute ** set to book_name, like this:--&gt;&#10;            &lt;input name=&quot;book_name&quot; type=&quot;text&quot; /&gt;&#10;        &lt;/label&gt;&#10;        &lt;label&gt;Book Author&lt;/label&gt;&#10;        &lt;label&gt;&#10;            &lt;input name=&quot;book_author&quot; type=&quot;text&quot; /&gt;&#10;        &lt;/label&gt;&#10;        &lt;label&gt;Rating&lt;/label&gt;&#10;        &lt;label&gt;&#10;            &lt;input name=&quot;book_rating&quot; type=&quot;number&quot; /&gt;&#10;        &lt;/label&gt;&#10;        &lt;button type=&quot;submit&quot;&gt;Add Book&lt;/button&gt;&#10;    &lt;/form&gt;&#10;  &lt;/body&gt;&#10;&lt;/html&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/templates/edit_rating.html">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/templates/edit_rating.html" />
              <option name="originalContent" value="&lt;!DOCTYPE html&gt;&#10;&lt;html lang=&quot;en&quot;&gt;&#10;&lt;head&gt;&#10;    &lt;meta charset=&quot;UTF-8&quot;&gt;&#10;    &lt;title&gt;Edit Rating&lt;/title&gt;&#10;&lt;/head&gt;&#10;&lt;body&gt;&#10;&lt;h1&gt;Edit Rating Page&lt;/h1&gt;&#10;&lt;form action=&quot;{{ url_for('edit', book_id=book.id) }}&quot; method=&quot;POST&quot;&gt;&#10;&#10;    &lt;p&gt;Book name: {{ book.book_name }}&lt;/p&gt;&#10;    &lt;p&gt;Book author: {{ book.book_author }}&lt;/p&gt;&#10;    &lt;label&gt;&#10;        &lt;input name=&quot;book_rating&quot; type=&quot;number&quot; value=&quot;{{ book.book_rating }}&quot; /&gt;&#10;    &lt;/label&gt;&#10;    &lt;button type=&quot;submit&quot;&gt;Update Rating&lt;/button&gt;&#10;&#10;&lt;/form&gt;&#10;&#10;&#10;&lt;/body&gt;&#10;&lt;/html&gt;" />
              <option name="updatedContent" value="&lt;!DOCTYPE html&gt;&#10;&lt;html lang=&quot;en&quot;&gt;&#10;&lt;head&gt;&#10;    &lt;meta charset=&quot;UTF-8&quot;&gt;&#10;    &lt;title&gt;Edit Rating&lt;/title&gt;&#10;&lt;/head&gt;&#10;&lt;body&gt;&#10;&lt;h1&gt;Edit Rating Page&lt;/h1&gt;&#10;&lt;form action=&quot;{{ url_for('edit', book_id=book.id) }}&quot; method=&quot;POST&quot;&gt;&#10;&#10;    &lt;p&gt;Book name: {{ book.book_name }}&lt;/p&gt;&#10;    &lt;p&gt;Book author: {{ book.book_author }}&lt;/p&gt;&#10;    &lt;label&gt;&#10;        &lt;input name=&quot;book_rating&quot; type=&quot;number&quot; value=&quot;{{ book.book_rating }}&quot; /&gt;&#10;    &lt;/label&gt;&#10;    &lt;button type=&quot;submit&quot;&gt;Update Rating&lt;/button&gt;&#10;&#10;&lt;/form&gt;&#10;&#10;&#10;&lt;/body&gt;&#10;&lt;/html&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>